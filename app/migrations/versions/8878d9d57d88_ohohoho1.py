"""ohohoho1

Revision ID: 8878d9d57d88
Revises: 
Create Date: 2023-10-22 13:17:20.544600

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8878d9d57d88'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genres',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('images',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('file_name', sa.String(length=100), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('md5_hash', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('md5_hash')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.Text(), nullable=False),
    sa.Column('role_description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plastinkas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('publisher', sa.String(length=100), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.Column('rating_sum', sa.Integer(), nullable=False),
    sa.Column('rating_num', sa.Integer(), nullable=False),
    sa.Column('id_image', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['id_image'], ['images.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('login', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('plastinka_genre',
    sa.Column('plastinka_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['plastinka_id'], ['plastinkas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('plastinka_id', 'genre_id')
    )
    op.create_table('plastinka_visits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plastinka_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['plastinka_id'], ['plastinkas.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('plastinka_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plastinka_id'], ['plastinkas.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    data_upgrades_role()
    users_upgrades()
    genres_upgrades()



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('plastinka_visits')
    op.drop_table('plastinka_genre')
    op.drop_table('users')
    op.drop_table('plastinkas')
    op.drop_table('roles')
    op.drop_table('images')
    op.drop_table('genres')
    # ### end Alembic commands ###


def data_upgrades_role():
    """Add any optional data upgrade migrations here!"""
    table = sa.sql.table('roles', sa.sql.column('role_name', sa.String), sa.sql.column('role_description', sa.String))
    op.bulk_insert(table,
        [
            {'role_name': 'Администратор', 'role_description': 'Суперпользователь, имеет полный доступ к системе, в том числе к созданию и удалению книг.'},
            {'role_name': 'Исполнитель', 'role_description': 'Может редактировать данные пластинок'},
            {'role_name': 'Пользователь', 'role_description': 'Может оставлять рецензии.'},
        ]
    )


from werkzeug.security import generate_password_hash
def users_upgrades():

    table = sa.sql.table('users', sa.sql.column('login', sa.String), sa.sql.column('password_hash', sa.String),sa.sql.column('last_name', sa.String),
        sa.sql.column('first_name', sa.String), sa.sql.column('middle_name', sa.String), sa.sql.column('role_id', sa.Integer))
    op.bulk_insert(table,
        [
            {'login': 'user1', 'password_hash': generate_password_hash('qwerty'), 'last_name': 'Иван1', 'first_name': 'Иван', 'middle_name': 'Иван', 'role_id': 1},
            {'login': 'user2', 'password_hash': generate_password_hash('qwerty'), 'last_name': 'Иван2', 'first_name': 'Иван', 'middle_name': 'Иван', 'role_id': 2},
            {'login': 'user3', 'password_hash': generate_password_hash('qwerty'), 'last_name': 'Иван3', 'first_name': 'Иван', 'middle_name': 'Иван', 'role_id': 3},
        ]
    )


def genres_upgrades():
    table = sa.sql.table('genres', sa.sql.column('name', sa.String))
    op.bulk_insert(table,
        [
            {'name': 'РОК'},
            {'name': 'ПОП'},
            {'name': 'РЕП'},
            {'name': 'ХИП-ХОП'},
        ]
    )